import pandas as pd

dados = pd.read_csv("https://gist.githubusercontent.com/guilhermesilveira/dd7ba8142321c2c8aaa0ddd6c8862fcc/raw/e694a9b43bae4d52b6c990a5654a193c3f870750/precos.csv")
dados.head()

dados["km_por_ano"] = dados["milhas_por_ano"] * 1.60934
#criamos uma nova ocoluna em km e convertemos as milhas para km
dados.head()

#vamos tambem criar uma coluna para representar a idade
from datetime import datetime

dados["idade"] = datetime.today().year - dados["ano_do_modelo"]
dados.head()

dados.drop(["milhas_por_ano", "ano_do_modelo"], axis = 1, inplace = True)
dados.head()

x = dados[["preco", "idade", "km_por_ano"]] #varias colunas
y = dados["vendido"] #apenas uma coluna

from sklearn.dummy import DummyClassifier

dummy = DummyClassifier(strategy="most_frequent")
#repare que utilizamos os dados crus
dummy.fit(raw_treinox, treinoy)
previsoesdummy = dummy.predict(testex)
acuraciadummy = accuracy_score(testey, previsoesdummy) * 100
print(f"A acuracia do dummy foi de {acuraciadummy:.2f}%")



from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import export_graphviz
import graphviz

treinox, testex, treinoy, testey = train_test_split(x, y, random_state = SEED, stratify = y)

modelo3 = DecisionTreeClassifier(max_depth = 3)
modelo3.fit(treinox, treinoy)

previsoes3 = modelo3.predict(testex)

acuracia3 = accuracy_score(testey, previsoes) * 100
print(f"A acuracia foi de {acuracia3:.2f}%")

estrutura2 = export_graphviz(modelo3, filled = True, rounded = True, feature_names = x.columns, class_names = ["nao", 'sim'])

grafico = graphviz.Source(estrutura2)
grafico
